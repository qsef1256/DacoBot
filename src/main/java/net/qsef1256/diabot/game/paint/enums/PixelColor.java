package net.qsef1256.diabot.game.paint.enums;

import lombok.Getter;
import org.jetbrains.annotations.Nullable;

import java.awt.*;
import java.util.Collections;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public enum PixelColor {

    RED('r', "üü•", Color.RED),
    ORANGE('o', "üüß", Color.ORANGE),
    YELLOW('y', "üü®", Color.YELLOW),
    GREEN('g', "üü©", Color.GREEN),
    BLUE('b', "üü¶", Color.BLUE),
    PURPLE('p', "üü™", Color.MAGENTA),
    BROWN('n', "üü´", new Color(107, 52, 0)),
    BLACK('k', "‚¨õ", Color.BLACK),
    WHITE('w', "‚¨ú", Color.WHITE);
    /*ZERO('0',"0Ô∏è‚É£"),
    ONE('1',"1Ô∏è‚É£"),
    TWO('2',"2Ô∏è‚É£"),
    THREE('3',"3Ô∏è‚É£"),
    FOUR('4',"4Ô∏è‚É£"),
    FIVE('5',"5Ô∏è‚É£"),
    SIX('6',"6Ô∏è‚É£"),
    SEVEN('7',"7Ô∏è‚É£"),
    EIGHT('8',"8Ô∏è‚É£"),
    NINE('9',"9Ô∏è‚É£"),
    UP('w',"‚¨Ü"),
    DOWN('s',"‚¨á"),
    LEFT('a',"‚¨Ö"),
    RIGHT('d',"‚û°"),
    HASH('#',"#Ô∏è‚É£"),
    PLUS('+',"‚ûï"),
    MINUS('-',"‚ûñ"),
    MULTI('*',"‚úñ"),
    DIV('/',"‚ûó"),
    HEART('t',"‚ù§"),
    QUESTION('?',"‚ùì"),
    EXCLAMATION('!',"‚ùó"),;*/

    private static final Map<String, PixelColor> emojiMap =
            Collections.unmodifiableMap(Stream.of(values()).collect(Collectors.toMap(PixelColor::getEmoji, Function.identity())));
    private static final Map<Character, PixelColor> idMap =
            Collections.unmodifiableMap(Stream.of(values()).collect(Collectors.toMap(PixelColor::getId, Function.identity())));
    private static final Map<Color, PixelColor> colorMap =
            Collections.unmodifiableMap(Stream.of(values()).collect(Collectors.toMap(PixelColor::getColor, Function.identity())));
    @Getter
    private final String emoji;
    @Getter
    private final char id;
    @Getter
    private Color color;

    PixelColor(char id, String emoji) {
        this.id = id;
        this.emoji = emoji;
        color = null;
    }

    PixelColor(char id, String emoji, Color color) {
        this(id, emoji);
        this.color = color;
    }

    @Nullable
    public static PixelColor findByEmoji(String emojiValue) {
        return emojiMap.get(emojiValue);
    }

    @Nullable
    public static PixelColor findById(char idValue) {
        return idMap.get(idValue);
    }

    @Nullable
    public static PixelColor findByColor(Color colorValue) {
        return colorMap.get(colorValue);
    }

}
